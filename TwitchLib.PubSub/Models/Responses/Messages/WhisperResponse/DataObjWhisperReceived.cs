using Newtonsoft.Json.Linq;

namespace TwitchLib.PubSub.Models.Responses.Messages.Whispers
{
    /// <summary>Class representing the data in the MessageData object.</summary>
    public class DataObjWhisperReceived
    {
        /// <summary>DataObject identifier</summary>
        public string Id { get; protected set; }
        /// <summary>Twitch assigned thread id</summary>
        public string ThreadId { get; protected set; }
        /// <summary>Body of data received from Twitch</summary>
        public string Body { get; protected set; }
        /// <summary>Timestamp generated by Twitc</summary>
        public long SentTs { get; protected set; }
        /// <summary>Id of user that sent whisper.</summary>
        public string FromId { get; protected set; }
        /// <summary>Tags object housing associated tags.</summary>
        public TagsObj Tags { get; protected set; }
        /// <summary>Receipient object housing various properties about user who received whisper.</summary>
        public RecipientObj Recipient { get; protected set; }
        /// <summary>Uniquely generated string used to identify response from request.</summary>
        public string Nonce { get; protected set; }

        /// <summary>DataObj constructor.</summary>
        public DataObjWhisperReceived(JToken json)
        {
            Id = json.SelectToken("id").ToString();
            ThreadId = json.SelectToken("thread_id")?.ToString();
            Body = json.SelectToken("body")?.ToString();
            SentTs = long.Parse(json.SelectToken("sent_ts").ToString());
            FromId = json.SelectToken("from_id").ToString();
            Tags = new TagsObj(json.SelectToken("tags"));
            Recipient = new RecipientObj(json.SelectToken("recipient"));
            Nonce = json.SelectToken("nonce")?.ToString();
        }
    }
}
